# coding: utf-8

"""
    Adzerk Decision API

    Adzerk Decision API  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import adzerk_decision_sdk
from adzerk_decision_sdk.models.decision import Decision  # noqa: E501
from adzerk_decision_sdk.rest import ApiException

class TestDecision(unittest.TestCase):
    """Decision unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Decision
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = adzerk_decision_sdk.models.decision.Decision()  # noqa: E501
        if include_optional :
            return Decision(
                ad_id = 56, 
                advertiser_id = 56, 
                creative_id = 56, 
                flight_id = 56, 
                campaign_id = 56, 
                priority_id = 56, 
                click_url = '0', 
                contents = [
                    adzerk_decision_sdk.models.content.Content(
                        type = '0', 
                        template = '0', 
                        custom_template = '0', 
                        data = adzerk_decision_sdk.models.data.data(), 
                        body = '0', )
                    ], 
                impression_url = '0', 
                events = [
                    adzerk_decision_sdk.models.event.Event(
                        id = 56, 
                        url = '0', )
                    ], 
                matched_points = [
                    adzerk_decision_sdk.models.matched_point.MatchedPoint(
                        lat = '0', 
                        lon = '0', )
                    ], 
                pricing = adzerk_decision_sdk.models.pricing_data.PricingData(
                    price = 1.337, 
                    clear_price = 1.337, 
                    revenue = 1.337, 
                    rate_type = 56, 
                    e_cpm = 1.337, )
            )
        else :
            return Decision(
        )

    def testDecision(self):
        """Test Decision"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
