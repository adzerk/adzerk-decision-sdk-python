# coding: utf-8

"""
    Adzerk Decision API

    Adzerk Decision API  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import adzerk_decision_sdk
from adzerk_decision_sdk.models.decision_request import DecisionRequest  # noqa: E501
from adzerk_decision_sdk.rest import ApiException

class TestDecisionRequest(unittest.TestCase):
    """DecisionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DecisionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = adzerk_decision_sdk.models.decision_request.DecisionRequest()  # noqa: E501
        if include_optional :
            return DecisionRequest(
                placements = [
                    adzerk_decision_sdk.models.placement.Placement(
                        div_name = '0', 
                        network_id = 56, 
                        site_id = 56, 
                        ad_types = [
                            56
                            ], 
                        zone_ids = [
                            56
                            ], 
                        campaign_id = 56, 
                        flight_id = 56, 
                        ad_id = 56, 
                        click_url = '0', 
                        properties = adzerk_decision_sdk.models.properties.properties(), 
                        event_ids = [
                            56
                            ], 
                        overrides = adzerk_decision_sdk.models.overrides.overrides(), 
                        content_keys = {
                            'key' : 56
                            }, 
                        count = 56, 
                        proportionality = True, 
                        ecpm_partition = '0', 
                        ecpm_partitions = [
                            '0'
                            ], 
                        event_multiplier = -100000000, 
                        skip_selection = True, 
                        ad_query = adzerk_decision_sdk.models.ad_query.adQuery(), 
                        floor_price = 1.337, 
                        floor_cpc = 1.337, )
                    ], 
                user = adzerk_decision_sdk.models.user.User(
                    key = '0', ), 
                keywords = [
                    '0'
                    ], 
                url = '0', 
                referrer = '0', 
                ip = '0', 
                blocked_creatives = [
                    56
                    ], 
                is_mobile = True, 
                include_pricing_data = True, 
                notrack = True, 
                enable_bot_filtering = True, 
                enable_user_dbip = True, 
                consent = None, 
                device_id = '0', 
                parallel = True, 
                intended_latitude = 1.337, 
                intended_longitude = 1.337, 
                radius = 1.337, 
                include_matched_points = True
            )
        else :
            return DecisionRequest(
                placements = [
                    adzerk_decision_sdk.models.placement.Placement(
                        div_name = '0', 
                        network_id = 56, 
                        site_id = 56, 
                        ad_types = [
                            56
                            ], 
                        zone_ids = [
                            56
                            ], 
                        campaign_id = 56, 
                        flight_id = 56, 
                        ad_id = 56, 
                        click_url = '0', 
                        properties = adzerk_decision_sdk.models.properties.properties(), 
                        event_ids = [
                            56
                            ], 
                        overrides = adzerk_decision_sdk.models.overrides.overrides(), 
                        content_keys = {
                            'key' : 56
                            }, 
                        count = 56, 
                        proportionality = True, 
                        ecpm_partition = '0', 
                        ecpm_partitions = [
                            '0'
                            ], 
                        event_multiplier = -100000000, 
                        skip_selection = True, 
                        ad_query = adzerk_decision_sdk.models.ad_query.adQuery(), 
                        floor_price = 1.337, 
                        floor_cpc = 1.337, )
                    ],
        )

    def testDecisionRequest(self):
        """Test DecisionRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
